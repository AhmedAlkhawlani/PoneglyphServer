//package com.nova.poneglyph.fakeChat;
//
//
//import org.springframework.messaging.simp.SimpMessagingTemplate;
//import org.springframework.scheduling.annotation.Scheduled;
//import org.springframework.stereotype.Component;
//
//import java.text.SimpleDateFormat;
//import java.time.Instant;
//import java.time.LocalDateTime;
//import java.time.ZoneId;
//import java.time.format.DateTimeFormatter;
//import java.util.*;
//
//@Component
//public class FakeChatScheduler {
//    private final SimpMessagingTemplate messagingTemplate;
//    private final Random random = new Random();
//    private final Map<String, ConversationState> conversationStates = new HashMap<>();
//
//
//    public FakeChatScheduler(SimpMessagingTemplate messagingTemplate) {
//        this.messagingTemplate = messagingTemplate;
//        initializeConversationStates();
//    }
//
//    private void initializeConversationStates() {
//        // ÿ≠ÿßŸÑÿ© ŸÉŸÑ ÿ¥ÿÆÿµŸäÿ©
//        conversationStates.put("1", new ConversationState("Zoro", false, false, true));
//        conversationStates.put("2", new ConversationState("Luffy", false, false, true));
//        conversationStates.put("3", new ConversationState("Nami", false, false, false));
//        conversationStates.put("4", new ConversationState("Sanji", false, false, true));
//        conversationStates.put("5", new ConversationState("Robin", false, false, false));
//    }
//
//    @Scheduled(fixedRate = 3000)
//    public void simulateDynamicConversations() {
//        conversationStates.forEach((userId, state) -> {
//            // 30% ŸÅÿ±ÿµÿ© ŸÑÿ£Ÿä ÿ≠ÿØÿ´
//            if (random.nextInt(100) < 30) {
//                if (state.isOnline()) {
//                    if (state.isTyping()) {
//                        // ÿ•ŸÜŸáÿßÿ° ÿßŸÑŸÉÿ™ÿßÿ®ÿ© Ÿàÿ•ÿ±ÿ≥ÿßŸÑ ÿßŸÑÿ±ÿ≥ÿßŸÑÿ©
//                        sendTypingStatus(userId, state.getName(), false);
//                        sendRandomMessage(userId, state.getName());
//                    } else if (random.nextBoolean()) {
//                        // ÿ®ÿØÿ° ÿßŸÑŸÉÿ™ÿßÿ®ÿ©
//                        sendTypingStatus(userId, state.getName(), true);
//                    } else {
//                        // ÿ•ÿ±ÿ≥ÿßŸÑ ÿ±ÿ≥ÿßŸÑÿ© ŸÖÿ®ÿßÿ¥ÿ±ÿ©
//                        sendRandomMessage(userId, state.getName());
//                    }
//                } else {
//                    // 10% ŸÅÿ±ÿµÿ© ŸÑŸÑÿßÿ™ÿµÿßŸÑ
//                    if (random.nextInt(100) < 10) {
//                        updateOnlineStatus(userId, state.getName(), true);
//                    }
//                }
//            }
//        });
//    }
//
//    private void sendRandomMessage(String userId, String sender) {
////        String[] zoroMessages = {"‚öîÔ∏è ŸÖŸÜ Ÿäÿ≠ÿßÿ±ÿ® ŸÖÿπŸäÿü", "ÿ£ÿ≠ÿ™ÿßÿ¨ ÿ•ŸÑŸâ ÿ™ÿØÿ±Ÿäÿ®", "ÿ£ŸäŸÜ ŸÑŸàŸÅŸäÿü"};
//        String[] zoroMessages = {
//                "‚öîÔ∏è ŸÖŸÜ Ÿäÿ¨ÿ±ÿ§ ÿπŸÑŸâ ÿ™ÿ≠ÿØŸäŸäÿü",
//                "üí™ ÿßŸÑÿ™ÿØÿ±Ÿäÿ® ŸÑÿß Ÿäÿ™ŸàŸÇŸÅ ÿ£ÿ®ÿØÿßŸã!",
//                "üó°Ô∏è ÿ∑ÿ±ŸäŸÇ ÿßŸÑÿ≥ÿßŸÖŸàÿ±ÿßŸä ŸÑÿß Ÿäÿπÿ±ŸÅ ÿßŸÑÿ™ÿ±ÿßÿ¨ÿπ",
//                "üò§ ŸÑŸàŸÅŸä! ÿ™ŸàŸÇŸÅ ÿπŸÜ ÿßŸÑÿ∂Ÿäÿßÿπ!",
//                "üç∂ ÿ£ŸäŸáÿß ÿßŸÑŸÖÿ∑ÿπŸÖ... ÿ£ŸäŸÜ ÿ£ŸÜÿ™ÿü",
//                "ü§ï ÿ¢Ÿá... Ÿáÿ∞ÿß ÿßŸÑÿ¨ÿ±ÿ≠ ŸÖÿ≤ÿπÿ¨",
//                "üß≠ ÿ£ŸÜÿß ŸÑÿ≥ÿ™ ÿ∂ÿßÿ¶ÿπÿßŸãÿå ÿ£ŸÜÿß ÿ£ÿ≥ÿ™ŸÉÿ¥ŸÅ!",
//                "üí§ ÿßŸÑÿ™ÿØÿ±Ÿäÿ® ÿßŸÑÿ¥ÿßŸÇ Ÿäÿ≥ÿ™ÿ≠ŸÇ ŸÇŸäŸÑŸàŸÑÿ© ÿ¨ŸäÿØÿ©",
//                "üëä ŸÑŸÜ ÿ™Ÿáÿ≤ŸÖŸÜÿß ÿ£Ÿä ŸÇÿ±ÿßÿµŸÜÿ©!",
//                "üóø ÿßŸÑÿµÿ®ÿ± ŸÖŸÅÿ™ÿßÿ≠ ÿßŸÑŸÇŸàÿ© ÿßŸÑÿ≠ŸÇŸäŸÇŸäÿ©"
//        };
//
////        String[] luffyMessages = {"‚ò†Ô∏è ÿ≥ÿ£ŸÉŸàŸÜ ŸÖŸÑŸÉ ÿßŸÑŸÇÿ±ÿßÿµŸÜÿ©!", "ÿ£ŸÜÿß ÿ¨ÿßÿ¶ÿπ!", "ŸÑŸÜÿ∞Ÿáÿ® ŸÅŸä ŸÖÿ∫ÿßŸÖÿ±ÿ©!"};
//        String[] luffyMessages = {
//                "‚ò†Ô∏è ÿ≥ŸÜŸÉŸàŸÜ ÿ£ŸÇŸàŸâ ŸÇÿ±ÿßÿµŸÜÿ©!",
//                "üçñ ÿ£ŸÜÿß ÿ¨ÿßÿ¶ÿπ ÿ¨ÿØÿßŸã!",
//                "ü¶∏‚Äç‚ôÇÔ∏è ŸÑÿß ÿ™ÿÆÿßŸÅŸàÿß! ÿ£ŸÜÿß ŸáŸÜÿß!",
//                "üòÇ ÿ¥ÿßŸÜŸÉÿ≥ ÿ≥ŸäŸÉŸàŸÜ ŸÅÿÆŸàÿ±ÿßŸã ÿ®Ÿä!",
//                "üëë ŸÖŸÑŸÉ ÿßŸÑŸÇÿ±ÿßÿµŸÜÿ©... Ÿáÿ∞ÿß ÿ£ŸÜÿß!",
//                "ü§ó ÿ£ÿ±ŸäÿØ ÿ£ÿµÿØŸÇÿßÿ° ÿ¨ÿØÿØ!",
//                "üí™ ÿßŸÑŸÖÿπÿ±ŸÉÿ© ŸÑŸÖ ÿ™ŸÜÿ™Ÿá ÿ®ÿπÿØ!",
//                "üçó ÿßŸÑŸÖÿ≤ŸäÿØ ŸÖŸÜ ÿßŸÑŸÑÿ≠ŸÖ ŸÖŸÜ ŸÅÿ∂ŸÑŸÉ!",
//                "üò¥ ÿ®ÿπÿØ ÿßŸÑÿ£ŸÉŸÑ... ÿ≠ÿßŸÜ ŸàŸÇÿ™ ÿßŸÑŸÜŸàŸÖ",
//                "üéâ ŸÑŸÜÿ≠ÿ™ŸÅŸÑ ÿ®ÿßŸÜÿ™ÿµÿßÿ±ŸÜÿß!"
//        };
////        String[] namiMessages = {"üí∞ ÿ™ÿ≠ÿ™ÿßÿ¨ ÿ•ŸÑŸâ ÿßŸÑŸÖÿ≤ŸäÿØ ŸÖŸÜ ÿßŸÑŸÖÿßŸÑ", "ÿßŸÑÿ∑ŸÇÿ≥ ÿ≥Ÿäÿ° ÿßŸÑŸäŸàŸÖ", "ÿ£ŸäŸÜ ÿ≤Ÿàÿ±Ÿàÿü"};
//        String[] namiMessages = {
//                "üí∞ ÿßÿØŸÅÿπ ÿ£ŸàŸÑÿßŸã ÿ´ŸÖ ÿ™ÿ≠ÿØÿ´!",
//                "üå™Ô∏è ÿπÿßÿµŸÅÿ© ŸÇÿßÿØŸÖÿ©... ÿßÿ≥ÿ™ÿπÿØŸàÿß!",
//                "üó∫Ô∏è ÿ£ÿØÿ±ÿ≥ ÿßŸÑÿÆÿ±Ÿäÿ∑ÿ©ÿå ÿßŸÜÿ™ÿ∏ÿ±ŸàŸÜŸä",
//                "üëä ÿ≤Ÿàÿ±Ÿà! ŸÑÿß ÿ™ÿ∂ŸÑ ÿßŸÑÿ∑ÿ±ŸäŸÇ ŸÖÿ¨ÿØÿØÿßŸã!",
//                "üõçÔ∏è ŸÖÿ™Ÿâ ÿ≥ŸÜÿ∞Ÿáÿ® ŸÑŸÑÿ™ÿ≥ŸàŸÇÿü",
//                "üçä ÿ®ŸäŸÑÿßŸÖŸäÿ±... ÿ£ÿ¥ÿ™ÿßŸÇ ÿ•ŸÑŸäŸÉ",
//                "üò† ŸÖŸÜ ÿ≥ÿ±ŸÇ ÿ£ŸÖŸàÿßŸÑŸäÿü!",
//                "ü§ì ÿÆÿ∑ ÿßŸÑÿ≥Ÿäÿ± ŸÖÿ≠ÿ≥Ÿàÿ® ÿ®ÿØŸÇÿ©",
//                "‚è∞ ÿßÿ≥ÿ™ŸäŸÇÿ∏Ÿàÿß! ÿßŸÑŸàŸÇÿ™ ÿ´ŸÖŸäŸÜ!",
//                "üåû ÿµÿ®ÿßÿ≠ ÿßŸÑÿÆŸäÿ± ÿ£ŸäŸáÿß ÿßŸÑŸÉÿ≥ÿßŸÑŸâ!"
//        };
////        String[] sanjiMessages = {"üç≥ ÿßŸÑÿ∑ÿπÿßŸÖ ÿ¨ÿßŸáÿ≤!", "ŸÜŸäŸÖŸä-ÿ≥ŸàÿßŸÜ~", "ŸÑÿß ÿ™ŸáÿØÿ± ÿßŸÑÿ∑ÿπÿßŸÖ!"};
//        String[] sanjiMessages = {
//                "üç≥ Ÿàÿ¨ÿ®ÿ© ÿ¨ÿØŸäÿØÿ© ÿ¨ÿßŸáÿ≤ÿ©!",
//                "üíò ŸÜŸäŸÖŸä-ÿ≥ŸàÿßŸÜ~ ÿ±Ÿàÿ®ŸäŸÜ-ÿ™ÿ¥ÿßŸÜ~",
//                "üö¨ ÿ®ÿπÿØ ÿßŸÑÿ∑ÿπÿßŸÖ... ÿ≥Ÿäÿ¨ÿßÿ±ÿ© ŸáÿßÿØÿ¶ÿ©",
//                "üë®‚Äçüç≥ ÿßŸÑŸÖÿ∑ÿ®ÿÆ ŸÖŸÉÿßŸÜŸä ÿßŸÑŸÖŸÇÿØÿ≥",
//                "üëû ŸÑÿß ÿ£ÿ±ŸÉŸÑ ÿßŸÑŸÜÿ≥ÿßÿ° ÿ£ÿ®ÿØÿßŸã!",
//                "üçú ŸàÿµŸÅÿ© ÿ¨ÿØŸäÿØÿ© ÿ≥ÿ£ÿ¨ÿ±ÿ®Ÿáÿß",
//                "üç∑ ÿßŸÑÿ∑ÿπÿßŸÖ ÿßŸÑÿ¨ŸäÿØ Ÿäÿ≠ÿ™ÿßÿ¨ ŸÜÿ®Ÿäÿ∞ÿßŸã ÿ¨ŸäÿØÿßŸã",
//                "üò§ ÿ≤Ÿàÿ±Ÿà! ŸÜÿ∏ŸÅ ÿ£ÿ∑ÿ®ÿßŸÇŸÉ!",
//                "üçõ ÿ∑ÿπÿßŸÖ ÿßŸÑŸäŸàŸÖ ÿÆÿßÿµ ÿ¨ÿØÿßŸã",
//                "üíê ŸáŸÑ ÿ™ÿ±ŸäÿØŸäŸÜ ÿ≤ŸáŸàÿ±ÿßŸã ŸÖÿπ ÿßŸÑÿπÿ¥ÿßÿ°ÿü"
//        };
////        String[] robinMessages = {"üìö ŸáŸÑ ŸÇÿ±ÿ£ÿ™ Ÿáÿ∞ÿß ÿßŸÑŸÉÿ™ÿßÿ®ÿü", "ŸÖÿ´Ÿäÿ± ŸÑŸÑÿßŸáÿ™ŸÖÿßŸÖ...", "Ÿáÿ∞Ÿá ÿßŸÑŸáŸäÿ±Ÿàÿ∫ŸÑŸäŸÅŸäÿ© ÿ∫ÿ±Ÿäÿ®ÿ©"};
//
//        String[] robinMessages = {
//                "üìñ Ÿáÿ∞ÿß ÿßŸÑŸÉÿ™ÿßÿ® ÿ±ÿßÿ¶ÿπ ÿ≠ŸÇÿßŸã",
//                "üèõÔ∏è Ÿáÿ∞Ÿá ÿßŸÑÿ¢ÿ´ÿßÿ± ÿ™ÿπŸàÿØ ŸÑŸÄ800 ÿπÿßŸÖ",
//                "ü§î ŸÑÿ∫ÿ≤ ÿ¨ÿØŸäÿØ Ÿäÿ≠Ÿäÿ±ŸÜŸä...",
//                "üå∫ ÿßŸÑÿ≤ŸáŸàÿ± ÿ™ÿ∞ŸÉÿ±ŸÜŸä ÿ®ÿ£ŸàŸáÿßÿ±ÿß",
//                "üëÄ ÿ£ÿ±Ÿâ ŸÉŸÑ ÿ¥Ÿäÿ° ÿ®ÿ£ÿπŸäŸÜŸä ÿßŸÑŸÖÿ∫ŸÑŸÇÿ©",
//                "üóùÔ∏è ÿßŸÑÿ≠ŸÇŸäŸÇÿ© ÿ™ŸÉŸÖŸÜ ŸÅŸä ÿ≠ÿ¨ÿ± ÿ®ŸàŸÜŸäÿ∫ŸÑŸäŸÅ",
//                "üòä ŸÑŸàŸÅŸä... ÿ£ŸÜÿ™ ŸÖÿ∂ÿ≠ŸÉ ÿ≠ŸÇÿßŸã",
//                "üßê Ÿáÿ∞Ÿá ÿßŸÑŸÜŸÇŸàÿ¥ ÿ∫Ÿäÿ± ŸÖÿ£ŸÑŸàŸÅÿ©",
//                "üåå ÿßŸÑŸÉŸàŸÜ Ÿäÿ≠ŸàŸä ÿ£ÿ≥ÿ±ÿßÿ±ÿßŸã ŸÑÿß ÿ™ÿ≠ÿµŸâ",
//                "üí° ŸÑÿØŸä ŸÅŸÉÿ±ÿ©... ÿßÿ≥ÿ™ŸÖÿπŸàÿß ÿ•ŸÑŸä"
//        };
//        String message;
//        switch (sender) {
//            case "Zoro": message = zoroMessages[random.nextInt(zoroMessages.length)]; break;
//            case "Luffy": message = luffyMessages[random.nextInt(luffyMessages.length)]; break;
//            case "Nami": message = namiMessages[random.nextInt(namiMessages.length)]; break;
//            case "Sanji": message = sanjiMessages[random.nextInt(sanjiMessages.length)]; break;
//            case "Robin": message = robinMessages[random.nextInt(robinMessages.length)]; break;
//            default: message = "ŸÖÿ±ÿ≠ÿ®ÿß!";
//        }
//
//        ChatMessage msg = new ChatMessage(userId, sender, message);
//        System.out.println("üí¨ [" + sender + "] Sending message: " + message);
//        messagingTemplate.convertAndSend("/topic/messages", msg);
//    }
//
//    // ... ÿßŸÑÿ∑ÿ±ŸÇ ÿßŸÑÿ≠ÿßŸÑŸäÿ© ŸÖÿπ ÿ™ÿπÿØŸäŸÑÿßÿ™ ...
//
//
//    // ÿ∑ÿ±ŸÇ ŸÖÿπÿØŸÑÿ© ŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ConversationState
//    @Scheduled(fixedRate = 15000)
//    public void randomTypingStatus() {
//        conversationStates.forEach((userId, state) -> {
//            if (state.isOnline() && random.nextInt(100) < 40) {
//                boolean typing = random.nextBoolean();
//                state.setTyping(typing);
//                sendTypingStatus(userId, state.getName(), typing);
//            }
//        });
//    }
//
//    @Scheduled(fixedRate = 25000)
//    public void randomRecordingStatus() {
//        conversationStates.forEach((userId, state) -> {
//            if (state.isOnline() && !state.isTyping() && random.nextInt(100) < 20) {
//                boolean recording = random.nextBoolean();
//                state.setRecording(recording);
//                sendRecordingStatus(userId, state.getName(), recording);
//            }
//        });
//    }
//
//    @Scheduled(fixedRate = 45000)
//    public void randomOnlineStatus() {
//        conversationStates.forEach((userId, state) -> {
//            boolean online = random.nextInt(100) < 70; // 70% ŸÅÿ±ÿµÿ© ÿ£ŸÜ ŸäŸÉŸàŸÜ ŸÖÿ™ÿµŸÑÿßŸã
//            if (state.isOnline() != online) {
//                state.setOnline(online);
//                updateOnlineStatus(userId, state.getName(), online);
//                if (!online) {
//                    sendLastSeen(userId, state.getName(), state.getLastSeen());
//                }
//            }
//        });
//    }
//
//    // ÿ∑ÿ±ŸÇ ÿßŸÑÿ•ÿ±ÿ≥ÿßŸÑ ÿßŸÑŸÖÿ≥ÿßÿπÿØÿ©
////    private void sendTypingStatus(String userId, String sender, boolean typing) {
////        TypingStatus status = new TypingStatus(userId, sender, typing);
////        System.out.println(typing ? "‚úçÔ∏è [" + sender + "] is typing" : "‚úã [" + sender + "] stopped typing");
////        messagingTemplate.convertAndSend("/topic/typing", status);
////    }
//    // ÿßÿ≥ÿ™ÿÆÿØÿßŸÖŸáÿß ŸÅŸä ÿ¨ŸÖŸäÿπ ÿ∑ÿ±ŸÇ ÿßŸÑÿ•ÿ±ÿ≥ÿßŸÑ ÿ®ÿØŸÑÿßŸã ŸÖŸÜ System.out.println ÿßŸÑÿπÿßÿØŸä
//    private void sendTypingStatus(String userId, String sender, boolean typing) {
//        TypingStatus status = new TypingStatus(userId, sender, typing);
//        printWithTimestamp(typing ? "‚úçÔ∏è [" + sender + "] is typing" : "‚úã [" + sender + "] stopped typing");
//        messagingTemplate.convertAndSend("/topic/typing", status);
//    }
//
//    private void sendRecordingStatus(String userId, String sender, boolean recording) {
//        RecordingStatus status = new RecordingStatus(userId, sender, recording);
//        System.out.println(recording ? "üé§ [" + sender + "] is recording" : "üîá [" + sender + "] stopped recording");
//        messagingTemplate.convertAndSend("/topic/recording", status);
//    }
//
//    private void updateOnlineStatus(String userId, String sender, boolean online) {
//        UserStatus status = new UserStatus(userId, sender, online);
//        System.out.println(online ? "üü¢ [" + sender + "] is online" : "üî¥ [" + sender + "] is offline");
//        messagingTemplate.convertAndSend("/topic/status", status);
//    }
//
//    private void sendLastSeen(String userId, String sender, Date lastSeen) {
//        LastSeenStatus status = new LastSeenStatus(userId, sender, lastSeen);
//        System.out.println("üïì [" + sender + "] last seen at " + lastSeen);
//        messagingTemplate.convertAndSend("/topic/lastseen", status);
//    }
//
//
//    @Scheduled(fixedRate = 60000)
//    public void simulateGroupConversation() {
//        if (random.nextInt(100) < 50) { // 50% ŸÅÿ±ÿµÿ© ŸÑÿ≠ÿØŸàÿ´ ŸÖÿ≠ÿßÿØÿ´ÿ© ÿ¨ŸÖÿßÿπŸäÿ©
//            String[] participants = conversationStates.keySet().toArray(new String[0]);
//            String initiatorId = participants[random.nextInt(participants.length)];
//            ConversationState initiator = conversationStates.get(initiatorId);
//
//            if (initiator.isOnline()) {
//                String message = "üîä ÿßŸÑÿ¨ŸÖŸäÿπ: " + getGroupMessage(initiator.getName());
//                ChatMessage msg = new ChatMessage(initiatorId, initiator.getName(), message);
//                System.out.println("üë• [" + initiator.getName() + "] Group message: " + message);
//                messagingTemplate.convertAndSend("/topic/messages", msg);
//
//                // ŸÖÿ≠ÿßŸÉÿßÿ© ÿ±ÿØŸàÿØ ÿßŸÑŸÅÿπŸÑ
//                Arrays.stream(participants)
//                        .filter(id -> !id.equals(initiatorId))
//                        .filter(id -> conversationStates.get(id).isOnline())
//                        .forEach(id -> {
//                            if (random.nextInt(100) < 60) { // 60% ŸÅÿ±ÿµÿ© ŸÑŸÑÿ±ÿØ
//                                try {
//                                    Thread.sleep(random.nextInt(3000)); // ÿ™ÿ£ÿÆŸäÿ± ÿπÿ¥Ÿàÿßÿ¶Ÿä
//                                } catch (InterruptedException e) {
//                                    Thread.currentThread().interrupt();
//                                }
//                                sendRandomMessage(id, conversationStates.get(id).getName());
//                            }
//                        });
//            }
//        }
//    }
//
//    private String getGroupMessage(String sender) {
//        Map<String, String[]> groupMessages = Map.of(
//                "Zoro", new String[]{"ŸÑŸÜŸÜÿ∑ŸÑŸÇ ŸÅŸä ŸÖÿ∫ÿßŸÖÿ±ÿ©!", "ŸÖŸÜ Ÿäÿ±ŸäÿØ ÿßŸÑÿ™ÿØÿ±Ÿäÿ® ŸÖÿπŸäÿü"},
//                "Luffy", new String[]{"ŸÑŸÜÿ£ŸÉŸÑ ŸÖÿπŸãÿß!", "ŸáŸäÿß ŸÜÿ®ÿ≠ÿ´ ÿπŸÜ ÿßŸÑŸÉŸÜÿ≤!"},
//                "Nami", new String[]{"ŸÑÿØŸäŸÜÿß ÿÆÿ∑ÿ© ÿ¨ÿØŸäÿØÿ©", "ŸÖŸÜ Ÿäÿ≥ÿ™ÿ∑Ÿäÿπ ŸÖÿ≥ÿßÿπÿØÿ™Ÿä ŸÅŸä ÿßŸÑŸÖŸÑÿßÿ≠ÿ©ÿü"},
//                "Sanji", new String[]{"ÿßŸÑÿ∑ÿπÿßŸÖ ÿ¨ÿßŸáÿ≤ ŸÑŸÑÿ¨ŸÖŸäÿπ!", "ŸÖŸÜ ÿ¨ÿßÿ¶ÿπÿü"},
//                "Robin", new String[]{"ŸÑÿØŸä ÿßŸÉÿ™ÿ¥ÿßŸÅ ÿ¨ÿØŸäÿØ", "ŸáŸÑ Ÿäÿπÿ±ŸÅ ÿ£ÿ≠ÿØ ÿπŸÜ Ÿáÿ∞Ÿá ÿßŸÑÿ≠ÿ∂ÿßÿ±ÿ©ÿü"}
//        );
//        return groupMessages.getOrDefault(sender, new String[]{"ŸÖÿ±ÿ≠ÿ®ÿß ÿ¨ŸÖŸäÿπÿß!"})[random.nextInt(2)];
//    }
//    @Scheduled(fixedRate = 120000)
//    public void simulateSpecialEvents() {
//        int event = random.nextInt(5);
//        switch (event) {
//            case 0:
//                // ÿ≠ÿØÿ´ ÿØÿÆŸàŸÑ ŸÖŸÅÿßÿ¨ÿ¶
//                String newUserId = "6";
//                ConversationState newUser = new ConversationState("Shanks", false, false, true);
//                conversationStates.put(newUserId, newUser);
//                updateOnlineStatus(newUserId, "Shanks", true);
//                sendRandomMessage(newUserId, "Shanks");
//                break;
//
//            case 1:
//                // ŸÖÿ≠ÿßÿØÿ´ÿ© ÿ≥ÿßÿÆŸÜÿ©
//                conversationStates.forEach((userId, state) -> {
//                    if (state.isOnline() && random.nextInt(100) < 80) {
//                        sendTypingStatus(userId, state.getName(), true);
//                        try {
//                            Thread.sleep(1000 + random.nextInt(2000));
//                        } catch (InterruptedException e) {
//                            Thread.currentThread().interrupt();
//                        }
//                        sendTypingStatus(userId, state.getName(), false);
//                        sendRandomMessage(userId, state.getName());
//                    }
//                });
//                break;
//
//            case 2:
//                // ÿ™ÿ≥ÿ¨ŸäŸÑ ÿµŸàÿ™Ÿä ÿ¨ŸÖÿßÿπŸä
//                conversationStates.forEach((userId, state) -> {
//                    if (state.isOnline() && random.nextInt(100) < 50) {
//                        sendRecordingStatus(userId, state.getName(), true);
//                        try {
//                            Thread.sleep(3000 + random.nextInt(5000));
//                        } catch (InterruptedException e) {
//                            Thread.currentThread().interrupt();
//                        }
//                        sendRecordingStatus(userId, state.getName(), false);
//                        sendRandomMessage(userId, state.getName());
//                    }
//                });
//                break;
//
//            case 3:
//                // ÿÆÿ±Ÿàÿ¨ ÿ¨ŸÖÿßÿπŸä
//                conversationStates.forEach((userId, state) -> {
//                    if (state.isOnline() && random.nextInt(100) < 70) {
//                        updateOnlineStatus(userId, state.getName(), false);
//                    }
//                });
//                break;
//
//            case 4:
//                // ÿπŸàÿØÿ© ÿ¨ŸÖÿßÿπŸäÿ©
//                conversationStates.forEach((userId, state) -> {
//                    if (!state.isOnline() && random.nextInt(100) < 70) {
//                        updateOnlineStatus(userId, state.getName(), true);
//                    }
//                });
//                break;
//        }
//    }
//
//    private void printWithTimestamp(String message) {
//        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
//        System.out.println("[" + sdf.format(new Date()) + "] " + message);
//    }
//
//    private String formatLastSeen(String lastSeen) {
//        if (lastSeen == null || lastSeen.isEmpty()) {
//            return "ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ";
//        }
//
//        try {
//            // ÿ•ÿ∞ÿß ŸÉÿßŸÜ ÿßŸÑÿ™ÿßÿ±ŸäÿÆ ÿπÿ®ÿßÿ±ÿ© ÿπŸÜ timestamp (ŸÖÿ´ŸÑ 1753065403387)
//            if (lastSeen.matches("\\d+")) {
//                long timestamp = Long.parseLong(lastSeen);
//                return formatDateFromTimestamp(timestamp);
//            }
//            // ÿ•ÿ∞ÿß ŸÉÿßŸÜ ÿßŸÑÿ™ÿßÿ±ŸäÿÆ ÿ®ÿµŸäÿ∫ÿ© ISO (ŸÖÿ´ŸÑ "2023-07-21T05:36:44.116Z")
//            else {
//                return formatDateFromISO(lastSeen);
//            }
//        } catch (Exception e) {
//            return "ÿ¢ÿÆÿ± ÿ∏ŸáŸàÿ±: " + lastSeen; // ÿßŸÑÿπŸàÿØÿ© ŸÑŸÑŸÇŸäŸÖÿ© ÿßŸÑÿ£ÿµŸÑŸäÿ© ŸÅŸä ÿ≠ÿßŸÑÿ© ÿßŸÑÿÆÿ∑ÿ£
//        }
//    }
//
//    private String formatDateFromTimestamp(long timestamp) {
//        Date date = new Date(timestamp);
//        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm a", Locale.getDefault());
//        return "ÿ¢ÿÆÿ± ÿ∏ŸáŸàÿ±: " + sdf.format(date);
//    }
//
//    private String formatDateFromISO(String isoDate) {
//        try {
//            Instant instant = Instant.parse(isoDate);
//            LocalDateTime dateTime = LocalDateTime.ofInstant(instant, ZoneId.systemDefault());
//            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("hh:mm a", Locale.getDefault());
//            return "ÿ¢ÿÆÿ± ÿ∏ŸáŸàÿ±: " + dateTime.format(formatter);
//        } catch (Exception e) {
//            return isoDate;
//        }
//    }
//}
