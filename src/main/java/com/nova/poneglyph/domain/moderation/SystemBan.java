package com.nova.poneglyph.domain.moderation;

import com.nova.poneglyph.domain.enums.BanType;
import com.nova.poneglyph.domain.user.User;
import jakarta.persistence.*;
import lombok.*;

@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Entity
@Table(name = "system_bans",
        indexes = {
                @Index(name = "idx_sysbans_phone", columnList = "normalized_phone"),
                @Index(name = "idx_sysbans_active", columnList = "is_active")
        })
public class SystemBan {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "phone_number", nullable = false, length = 20)
    private String phoneNumber; // E.164

    @Column(name = "normalized_phone", length = 20, insertable = false, updatable = false)
    private String normalizedPhone; // generated by DB

    @Enumerated(EnumType.STRING)
    @Column(name = "ban_type", nullable = false, length = 16)
    private BanType banType;

    @Column(name = "ban_reason", nullable = false, length = 50)
    private String banReason;

    @Column(name = "reason_details")
    private String reasonDetails;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "banned_by")
    private User bannedBy;

    @Column(name = "created_at")
    private java.time.OffsetDateTime createdAt;

    @Column(name = "expires_at")
    private java.time.OffsetDateTime expiresAt; // null for permanent

    @Column(name = "is_active")
    private boolean active = true;
}
